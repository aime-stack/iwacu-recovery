// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DIRECT_URL")
  directUrl = env("DIRECT_URL")
}

model StaffUser {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String?  // Optional: for legacy auth, will migrate to Supabase Auth
  supabaseId   String?  @unique // Supabase Auth user ID
  role         String   @default("admin")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([email])
  @@index([supabaseId])
}

model Donation {
  id            Int      @id @default(autoincrement())
  name          String
  email         String
  amount        Float
  transactionId String   @unique
  status        String
  isRecurring   Boolean  @default(false)
  frequency     String?
  sponsorName   String?  // This tracks which victim they're sponsoring
  createdAt     DateTime @default(now())

  @@index([email])
  @@index([status])
  @@index([createdAt])
}

model Subscription {
  id                  Int      @id @default(autoincrement())
  email               String
  name                String
  amount              Float
  frequency           String   // "monthly", "quarterly", "yearly"
  planId              String   @unique
  subscriptionId      String?  @unique
  status              String   // "active", "cancelled", "paused"
  nextPaymentDate     DateTime?
  lastPaymentDate     DateTime?
  sponsorName         String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  subject   String
  message   String   @db.Text
  service   String?
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([read])
  @@index([createdAt])
}

model Appointment {
  id               Int      @id @default(autoincrement())
  name             String
  email            String
  phone            String
  appointmentDate  DateTime
  appointmentTime  String
  reason           String
  status           String   @default("pending") // pending, confirmed, completed, cancelled
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([email])
  @@index([status])
  @@index([appointmentDate])
}

model GalleryImage {
  id          Int      @id @default(autoincrement())
  src         String   // Legacy field, kept for backward compatibility
  imageUrl    String   // Supabase Storage URL (primary field going forward)
  storagePath String?  // Path in Supabase Storage bucket for easier management
  alt         String
  title       String
  description String?
  category    String
  displayOrder Int     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([category])
  @@index([displayOrder])
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  category    String
  excerpt     String
  content     String   @db.Text
  imageUrl    String?  // Supabase Storage URL for featured image
  storagePath String?  // Path in Supabase Storage bucket
  author      String?
  published   Boolean  @default(false)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([slug])
  @@index([category])
  @@index([published])
  @@index([publishedAt])
}

// ----- NEW MODELS -----

model News {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  category    String
  excerpt     String
  content     String   @db.Text
  imageUrl    String?  // Supabase Storage URL
  storagePath String?
  author      String?
  published   Boolean  @default(false)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Partner {
  id          Int      @id @default(autoincrement())
  name        String
  website     String?
  logoUrl     String   // Supabase Storage URL
  storagePath String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model School {
  id          Int      @id @default(autoincrement())
  name        String
  address     String?
  logoUrl     String?
  storagePath String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Team {
  id          Int      @id @default(autoincrement())
  name        String
  role        String
  bio         String?
  photoUrl    String
  storagePath String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id          Int      @id @default(autoincrement())
  title       String
  alt         String
  imageUrl    String
  storagePath String?
  category    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
