// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model StaffUser {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  role         String   @default("admin")
  createdAt    DateTime @default(now())
}

model Donation {
  id            Int      @id @default(autoincrement())
  name          String
  email         String
  amount        Float
  transactionId String   @unique
  status        String
  isRecurring   Boolean  @default(false)
  frequency     String?
  sponsorName   String?  // This tracks which victim they're sponsoring
  createdAt     DateTime @default(now())
}

model Subscription {
  id                  Int      @id @default(autoincrement())
  email               String
  name                String
  amount              Float
  frequency           String   // "monthly", "quarterly", "yearly"
  planId              String   @unique
  subscriptionId      String?  @unique
  status              String   // "active", "cancelled", "paused"
  nextPaymentDate     DateTime?
  lastPaymentDate     DateTime?
  sponsorName         String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  subject   String
  message   String
  service   String?
  createdAt DateTime @default(now())
}

model Appointment {
  id               Int      @id @default(autoincrement())
  name             String
  email            String
  phone            String
  appointmentDate  DateTime
  appointmentTime  String
  reason           String
  status           String   @default("pending") // pending, confirmed, completed, cancelled
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model GalleryImage {
  id          Int      @id @default(autoincrement())
  src         String
  alt         String
  title       String
  description String?
  category    String
  displayOrder Int     @default(0)
  createdAt   DateTime @default(now())
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  category    String
  excerpt     String
  content     String   @db.Text
  author      String?
  published   Boolean  @default(false)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}